---
credentials:
  - <java.util.concurrent.CopyOnWriteArrayList>
      <com.nirima.jenkins.plugins.docker.utils.DockerDirectoryCredentials>
        <scope>SYSTEM</scope>
        <id>certs-for-dockerhost</id>
        <description>certs for dockerhost</description>
        <path>{{ dockerhost["credentialsPath"] }}</path>
      </com.nirima.jenkins.plugins.docker.utils.DockerDirectoryCredentials>
      <com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey plugin="ssh-credentials@1.12">
        <scope>SYSTEM</scope>
        <id>buildagent-key</id>
        <description>SSH key for connections to Jenkins buildagent</description>
        <username></username>
        <passphrase>iDaU+tMy9onQdCrt8tacgQ==</passphrase>
        <privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$FileOnMasterPrivateKeySource">
          <privateKeyFile>/Users/sradi/.ssh/id_rsa</privateKeyFile>
        </privateKeySource>
      </com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey>
    </java.util.concurrent.CopyOnWriteArrayList>

docker_cloud_configuration:
  - <com.nirima.jenkins.plugins.docker.DockerCloud>
      <name>{{ dockerhost["name"] }}</name>
      <templates>
        <com.nirima.jenkins.plugins.docker.DockerTemplate>
          <configVersion>2</configVersion>
          <labelString>{{ dockerhost["template"]["label"] }}</labelString>
          <launcher class="com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher">
            <sshConnector>
              <port>22</port>
              <credentialsId>buildagent-key</credentialsId>
              <jvmOptions></jvmOptions>
              <javaPath></javaPath>
              <maxNumRetries>0</maxNumRetries>
              <retryWaitTime>0</retryWaitTime>
            </sshConnector>
          </launcher>
          <remoteFsMapping>/var/jenkins_home/</remoteFsMapping>
          <remoteFs>{{ dockerhost["template"]["remoteFsRoot"] }}</remoteFs>
          <instanceCap>5</instanceCap>
          <mode>EXCLUSIVE</mode>
          <retentionStrategy class="com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy">
            <idleMinutes>10</idleMinutes>
            <idleMinutes defined-in="com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy">10</idleMinutes>
          </retentionStrategy>
          <numExecutors>1</numExecutors>
          <dockerTemplateBase>
            <image>{{ dockerhost["template"]["image"] }}</image>
            <dockerCommand></dockerCommand>
            <lxcConfString></lxcConfString>
            <hostname></hostname>
            <dnsHosts/>
            <network></network>
            <volumes/>
            <volumesFrom2/>
            <environment/>
            <bindPorts></bindPorts>
            <bindAllPorts>false</bindAllPorts>
            <privileged>false</privileged>
            <tty>false</tty>
            <extraHosts class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
              <c class="list"/>
              <list reference="../c"/>
            </extraHosts>
          </dockerTemplateBase>
          <removeVolumes>false</removeVolumes>
          <pullStrategy>PULL_LATEST</pullStrategy>
        </com.nirima.jenkins.plugins.docker.DockerTemplate>
      </templates>
      <serverUrl>{{ dockerhost["serverUrl"] }}</serverUrl>
      <connectTimeout>{{ dockerhost["connectTimeout"] }}</connectTimeout>
      <readTimeout>{{  dockerhost["readTimeout"] }}</readTimeout>
      <version></version>
      <credentialsId>certs-for-dockerhost</credentialsId>
      <containerCap>{{ dockerhost["containerCap"] }}</containerCap>
    </com.nirima.jenkins.plugins.docker.DockerCloud>
